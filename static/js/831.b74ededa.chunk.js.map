{"version":3,"file":"static/js/831.b74ededa.chunk.js","mappings":"wPAGaA,GAASC,EAAAA,EAAAA,IAAOC,EAAAA,GAAPD,CAAH,isBA8BNE,EAAYF,EAAAA,GAAAA,IAAH,2KASTG,EAAMH,EAAAA,GAAAA,IAAH,kJAQHI,EAAOJ,EAAAA,GAAAA,IAAH,sKAQJK,EAAUL,EAAAA,GAAAA,IAAH,kGAKPM,EAASN,EAAAA,GAAAA,GAAH,kF,kBCPnB,MAhDA,WACE,IAAQO,GAAOC,EAAAA,EAAAA,MAAPD,GACFE,GAAWC,EAAAA,EAAAA,MACjB,GAAuBC,EAAAA,EAAAA,WAAS,+BAAMF,QAAN,IAAMA,GAAN,UAAMA,EAAUG,aAAhB,aAAM,EAAiBC,IAAvB,IAAzBC,GAAP,eACA,GAAiCC,EAAAA,EAAAA,IAAYR,GAArCS,EAAR,EAAQA,QAASC,EAAjB,EAAiBA,MAAOC,EAAxB,EAAwBA,KAEhBC,EACNF,EADME,MAAOC,EACbH,EADaG,aAAcC,EAC3BJ,EAD2BI,SAAUC,EACrCL,EADqCK,OAAQC,EAC7CN,EAD6CM,YAAaC,EAC1DP,EAD0DO,aAG5D,IAAKR,IAAYE,EAAM,OAAO,KAC9B,GAAIF,EAAS,OAAO,uCACpB,IAAKA,GAAWE,EAAM,CACpB,IAAMO,EAAY,kCAAN,OAA0CF,GAChDG,EAAON,EAAaO,MAAM,EAAG,GAC7BC,EAAS,UAAMT,EAAN,aAAgBO,EAAhB,KACTG,EAAeP,EAClBQ,KAAI,SAAAC,GACH,OAAOA,EAAEC,IACV,IACAC,KAAK,MAER,OACE,UAAC9B,EAAD,YACE,SAACJ,EAAD,CAAQmC,GAAIpB,GAAgB,IAAKF,MAAO,cAAxC,mBAGA,UAACP,EAAD,YACE,0BACE,gBAAK8B,IAAKV,EAAQW,IAAI,GAAGC,MAAO,SAElC,UAACjC,EAAD,YACE,SAACE,EAAD,UAASsB,KAET,uBAAIP,KACJ,uBAAIQ,KACJ,uBAAIL,WAGR,UAACtB,EAAD,YACE,SAACH,EAAD,CAAQmC,GAAI,OAAZ,mBACA,SAACnC,EAAD,CAAQmC,GAAI,UAAZ,yBAGF,SAAC,KAAD,MAGL,CACF,C,iNCpDKI,EAAM,mCAENC,EAAWC,EAAAA,EAAAA,OAAa,CAC5BC,QAAS,+BACTC,OAAQ,CACNC,QAASL,EACTM,SAAU,QACVC,KAAM,MAIGC,EAAiB,WAC5B,OAA8BnC,EAAAA,EAAAA,WAAS,GAAvC,eAAOK,EAAP,KAAgB+B,EAAhB,KACA,GAAwBpC,EAAAA,EAAAA,UAAS,IAAjC,eAAOqC,EAAP,KAAaC,EAAb,KAUA,OARAC,EAAAA,EAAAA,YAAU,WACRH,GAAW,GACXR,EAASY,IAAI,uBAAuBC,MAAK,SAAAC,GACvCJ,EAAQI,EAAIL,KAAKM,SACjBP,GAAW,EACZ,GACF,GAAE,IAEI,CAACC,EAAMhC,EACf,EAIM,SAASD,EAAYwC,GAC1B,OAA8B5C,EAAAA,EAAAA,WAAS,GAAvC,eAAOK,EAAP,KAAgB+B,EAAhB,KACA,GAA0BpC,EAAAA,EAAAA,UAAS,CAAC,GAApC,eAAOM,EAAP,KAAcuC,EAAd,KACA,GAAwB7C,EAAAA,EAAAA,WAAS,GAAjC,eAAOO,EAAP,KAAauC,EAAb,KAWA,OATAP,EAAAA,EAAAA,YAAU,WACRH,GAAW,GACXR,EAASY,IAAT,iBAAuBI,IAAWH,MAAK,SAAAC,GACrCG,EAASH,EAAIL,MACbS,GAAQ,GACRV,GAAW,EACZ,GACF,GAAE,CAACQ,IAEG,CAAEvC,QAAAA,EAASC,MAAAA,EAAOC,KAAAA,EAC1B,CACM,SAASwC,EAAgBH,GAC9B,OAA8B5C,EAAAA,EAAAA,WAAS,GAAvC,eAAOK,EAAP,KAAgB+B,EAAhB,KACA,GAAwBpC,EAAAA,EAAAA,UAAS,CAAC,GAAlC,eAAOgD,EAAP,KAAaC,EAAb,KACA,GAAwBjD,EAAAA,EAAAA,WAAS,GAAjC,eAAOO,EAAP,KAAauC,EAAb,KAWA,OATAP,EAAAA,EAAAA,YAAU,WACRH,GAAW,GACXR,EAASY,IAAT,iBAAuBI,EAAvB,aAA0CH,MAAK,SAAAC,GAC7CO,EAAQP,EAAIL,KAAKW,MACjBF,GAAQ,GACRV,GAAW,EACZ,GACF,GAAE,CAACQ,IAEG,CAAEvC,QAAAA,EAAS2C,KAAAA,EAAMzC,KAAAA,EACzB,CACM,SAAS2C,EAAmBN,GACjC,OAA8B5C,EAAAA,EAAAA,WAAS,GAAvC,eAAOK,EAAP,KAAgB+B,EAAhB,KACA,GAA8BpC,EAAAA,EAAAA,UAAS,CAAC,GAAxC,eAAOmD,EAAP,KAAgBC,EAAhB,KAEA,GAAwBpD,EAAAA,EAAAA,WAAS,GAAjC,eAAOO,EAAP,KAAauC,EAAb,KAWA,OATAP,EAAAA,EAAAA,YAAU,WACRH,GAAW,GACXR,EAASY,IAAT,iBAAuBI,EAAvB,aAA0CH,MAAK,SAAAC,GAC7CU,EAAWV,EAAIL,KAAKM,SACpBG,GAAQ,GACRV,GAAW,EACZ,GACF,GAAE,CAACQ,IAEG,CAAEvC,QAAAA,EAAS8C,QAAAA,EAAS5C,KAAAA,EAC5B,CACM,IAAM8C,EAAkB,mCAAG,WAAMC,GAAN,uFACT1B,EAASY,IAAT,sCACSb,EADT,kBACsB2B,IAFb,cAC1BC,EAD0B,yBAIzBA,EAASlB,KAAKM,SAJW,2CAAH,qD","sources":["pages/homesubpage.styled.js","pages/HomeSubPage.jsx","service/Movies.api.js"],"sourcesContent":["import { NavLink } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const Button = styled(NavLink)`\n  box-shadow: inset 0px 1px 0px 0px #cf866c;\n  background: linear-gradient(to bottom, #d0451b 5%, #bc3315 100%);\n  background-color: #d0451b;\n  border-radius: 3px;\n  border: 1px solid #942911;\n\n  cursor: pointer;\n  color: #ffffff;\n  margin-top: 50px;\n  margin-bottom: 50px;\n  font-size: 13px;\n  padding: 6px 24px;\n  text-decoration: none;\n  text-shadow: 0px 1px 0px #854629;\n  width: 100px;\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  justify-content: center;\n\n  &:hover {\n    background: linear-gradient(to bottom, #bc3315 5%, #d0451b 100%);\n    background-color: #bc3315;\n  }\n  &:focus {\n    position: relative;\n    top: 1px;\n  }\n`;\nexport const BoxButton = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: center;\n  margin-right: auto;\n  margin-left: auto;\n  width: 1200px;\n  gap: 20px;\n`;\nexport const Box = styled.div`\n  display: flex;\n  flex-direction: column;\n  margin-right: auto;\n  margin-left: auto;\n  width: 1200px;\n  gap: 20px;\n`;\nexport const Page = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  width: 400px;\n  background-color: #ffffff;\n  margin-left: 50px;\n`;\nexport const PageBox = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: flex-start;\n`;\nexport const Header = styled.h2`\n  color: black;\n  font-size: 44px;\n  font-weight: 400;\n`;\n","import { useSubPages } from 'service/Movies.api';\nimport React, { useState } from 'react';\n\nimport { Button } from './homesubpage.styled';\nimport { Box } from './homesubpage.styled';\nimport { Outlet, useLocation, useParams } from 'react-router-dom';\nimport { Page, PageBox, Header, BoxButton } from './homesubpage.styled';\n\nfunction HomeSubPage() {\n  const { id } = useParams();\n  const location = useLocation();\n  const [fromLocation] = useState(() => location?.state?.from);\n  const { loading, movie, done } = useSubPages(id);\n\n  const { title, release_date, overview, genres, poster_path, vote_average } =\n    movie;\n\n  if (!loading && !done) return null;\n  if (loading) return <h3>Loading...</h3>;\n  if (!loading && done) {\n    const imgUrl = `${'https://image.tmdb.org/t/p/w500'}${poster_path}`;\n    const year = release_date.slice(0, 4);\n    const headTitle = `${title} (${year})`;\n    const genresString = genres\n      .map(x => {\n        return x.name;\n      })\n      .join(', ');\n\n    return (\n      <Box>\n        <Button to={fromLocation || '/'} state={'HomeSubPage'}>\n          Back\n        </Button>\n        <PageBox>\n          <div>\n            <img src={imgUrl} alt=\"\" width={400} />\n          </div>\n          <Page>\n            <Header>{headTitle}</Header>\n\n            <p>{overview}</p>\n            <p>{genresString}</p>\n            <p>{vote_average}</p>\n          </Page>\n        </PageBox>\n        <BoxButton>\n          <Button to={'cast'}>Cast</Button>\n          <Button to={'reviews'}>Reviews</Button>\n        </BoxButton>\n\n        <Outlet />\n      </Box>\n    );\n  }\n}\nexport default HomeSubPage;\n","import axios from 'axios';\nimport { useState, useEffect } from 'react';\n\nconst KEY = '5c631b44b992ee7cf944461a6248f299';\n\nconst response = axios.create({\n  baseURL: 'https://api.themoviedb.org/3',\n  params: {\n    api_key: KEY,\n    language: 'en-US',\n    size: 20,\n  },\n});\n\nexport const useTrendingApi = () => {\n  const [loading, setLoading] = useState(false);\n  const [data, setData] = useState([]);\n\n  useEffect(() => {\n    setLoading(true);\n    response.get('/trending/movie/day').then(res => {\n      setData(res.data.results);\n      setLoading(false);\n    });\n  }, []);\n\n  return [data, loading];\n};\n\n// https://api.themoviedb.org/3/movie/550?api_key=5c631b44b992ee7cf944461a6248f299\n\nexport function useSubPages(movieId) {\n  const [loading, setLoading] = useState(false);\n  const [movie, setMovie] = useState({});\n  const [done, setDone] = useState(false);\n\n  useEffect(() => {\n    setLoading(true);\n    response.get(`/movie/${movieId}`).then(res => {\n      setMovie(res.data);\n      setDone(true);\n      setLoading(false);\n    });\n  }, [movieId]);\n\n  return { loading, movie, done };\n}\nexport function useGetMovieCast(movieId) {\n  const [loading, setLoading] = useState(false);\n  const [cast, setCast] = useState({});\n  const [done, setDone] = useState(false);\n\n  useEffect(() => {\n    setLoading(true);\n    response.get(`/movie/${movieId}/credits`).then(res => {\n      setCast(res.data.cast);\n      setDone(true);\n      setLoading(false);\n    });\n  }, [movieId]);\n\n  return { loading, cast, done };\n}\nexport function useGetMovieReviews(movieId) {\n  const [loading, setLoading] = useState(false);\n  const [reviews, setReviews] = useState({});\n\n  const [done, setDone] = useState(false);\n\n  useEffect(() => {\n    setLoading(true);\n    response.get(`/movie/${movieId}/reviews`).then(res => {\n      setReviews(res.data.results);\n      setDone(true);\n      setLoading(false);\n    });\n  }, [movieId]);\n\n  return { loading, reviews, done };\n}\nexport const fetchSearchedMovie = async searchName => {\n  const responce = await response.get(\n    `/${`search/movie`}?api_key=${KEY}&query=${searchName}`\n  );\n  return responce.data.results;\n  // products.find((product) => product.id === productId);\n};\n"],"names":["Button","styled","NavLink","BoxButton","Box","Page","PageBox","Header","id","useParams","location","useLocation","useState","state","from","fromLocation","useSubPages","loading","movie","done","title","release_date","overview","genres","poster_path","vote_average","imgUrl","year","slice","headTitle","genresString","map","x","name","join","to","src","alt","width","KEY","response","axios","baseURL","params","api_key","language","size","useTrendingApi","setLoading","data","setData","useEffect","get","then","res","results","movieId","setMovie","setDone","useGetMovieCast","cast","setCast","useGetMovieReviews","reviews","setReviews","fetchSearchedMovie","searchName","responce"],"sourceRoot":""}