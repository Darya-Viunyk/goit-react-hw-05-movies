{"version":3,"file":"static/js/760.f4788d07.chunk.js","mappings":"wOAEaA,EAAOC,EAAAA,GAAAA,GAAH,6CAGJC,EAAaD,EAAAA,GAAAA,GAAH,0G,SCuBvB,MAvBA,WACE,IAAQE,GAAOC,EAAAA,EAAAA,MAAPD,GACR,GAAmCE,EAAAA,EAAAA,IAAmBF,GAA9CG,EAAR,EAAQA,QAASC,EAAjB,EAAiBA,QAASC,EAA1B,EAA0BA,KAE1B,OAAKF,GAAYE,EACbF,GAAgB,wCACfA,GAAWE,GAA2B,IAAnBD,EAAQE,QACvB,sEAEP,+BACE,SAACT,EAAD,UACGO,EAAQG,KAAI,SAAAC,GACX,OACE,2BACE,UAACT,EAAD,sBAAqBS,EAAGC,WACxB,6BAAKD,EAAGE,aAFDF,EAAGR,GAKf,QAduB,IAkB/B,C,iNCxBKW,EAAM,mCAENC,EAAWC,EAAAA,EAAAA,OAAa,CAC5BC,QAAS,+BACTC,OAAQ,CACNC,QAASL,EACTM,SAAU,QACVC,KAAM,MAIGC,EAAiB,WAC5B,OAA8BC,EAAAA,EAAAA,WAAS,GAAvC,eAAOjB,EAAP,KAAgBkB,EAAhB,KACA,GAAwBD,EAAAA,EAAAA,UAAS,IAAjC,eAAOE,EAAP,KAAaC,EAAb,KAUA,OARAC,EAAAA,EAAAA,YAAU,WACRH,GAAW,GACXT,EAASa,IAAI,uBAAuBC,MAAK,SAAAC,GACvCJ,EAAQI,EAAIL,KAAKM,SACjBP,GAAW,EACZ,GACF,GAAE,IAEI,CAACC,EAAMnB,EACf,EAIM,SAAS0B,EAAYC,GAC1B,OAA8BV,EAAAA,EAAAA,WAAS,GAAvC,eAAOjB,EAAP,KAAgBkB,EAAhB,KACA,GAA0BD,EAAAA,EAAAA,UAAS,CAAC,GAApC,eAAOW,EAAP,KAAcC,EAAd,KACA,GAAwBZ,EAAAA,EAAAA,WAAS,GAAjC,eAAOf,EAAP,KAAa4B,EAAb,KAWA,OATAT,EAAAA,EAAAA,YAAU,WACRH,GAAW,GACXT,EAASa,IAAT,iBAAuBK,IAAWJ,MAAK,SAAAC,GACrCK,EAASL,EAAIL,MACbW,GAAQ,GACRZ,GAAW,EACZ,GACF,GAAE,CAACS,IAEG,CAAE3B,QAAAA,EAAS4B,MAAAA,EAAO1B,KAAAA,EAC1B,CACM,SAAS6B,EAAgBJ,GAC9B,OAA8BV,EAAAA,EAAAA,WAAS,GAAvC,eAAOjB,EAAP,KAAgBkB,EAAhB,KACA,GAAwBD,EAAAA,EAAAA,UAAS,CAAC,GAAlC,eAAOe,EAAP,KAAaC,EAAb,KACA,GAAwBhB,EAAAA,EAAAA,WAAS,GAAjC,eAAOf,EAAP,KAAa4B,EAAb,KAWA,OATAT,EAAAA,EAAAA,YAAU,WACRH,GAAW,GACXT,EAASa,IAAT,iBAAuBK,EAAvB,aAA0CJ,MAAK,SAAAC,GAC7CS,EAAQT,EAAIL,KAAKa,MACjBF,GAAQ,GACRZ,GAAW,EACZ,GACF,GAAE,CAACS,IAEG,CAAE3B,QAAAA,EAASgC,KAAAA,EAAM9B,KAAAA,EACzB,CACM,SAASH,EAAmB4B,GACjC,OAA8BV,EAAAA,EAAAA,WAAS,GAAvC,eAAOjB,EAAP,KAAgBkB,EAAhB,KACA,GAA8BD,EAAAA,EAAAA,UAAS,CAAC,GAAxC,eAAOhB,EAAP,KAAgBiC,EAAhB,KAEA,GAAwBjB,EAAAA,EAAAA,WAAS,GAAjC,eAAOf,EAAP,KAAa4B,EAAb,KAWA,OATAT,EAAAA,EAAAA,YAAU,WACRH,GAAW,GACXT,EAASa,IAAT,iBAAuBK,EAAvB,aAA0CJ,MAAK,SAAAC,GAC7CU,EAAWV,EAAIL,KAAKM,SACpBK,GAAQ,GACRZ,GAAW,EACZ,GACF,GAAE,CAACS,IAEG,CAAE3B,QAAAA,EAASC,QAAAA,EAASC,KAAAA,EAC5B,CACM,IAAMiC,EAAkB,mCAAG,WAAMC,GAAN,uFACT3B,EAASa,IAAT,sCACSd,EADT,kBACsB4B,IAFb,cAC1BC,EAD0B,yBAIzBA,EAASlB,KAAKM,SAJW,2CAAH,qD","sources":["pages/reviews.styled.js","pages/Reviews.jsx","service/Movies.api.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const List = styled.ul`\n  list-style: none;\n`;\nexport const HeaderName = styled.h3`\n  color: black;\n  font-size: 32px;\n  font-weight: 500;\n  margin-bottom: 10px;\n`;\n","import { useGetMovieReviews } from 'service/Movies.api';\nimport React from 'react';\nimport { useParams } from 'react-router-dom';\nimport { List, HeaderName } from './reviews.styled';\n\nfunction Reviews() {\n  const { id } = useParams();\n  const { loading, reviews, done } = useGetMovieReviews(id);\n\n  if (!loading && !done) return null;\n  if (loading) return <h3>Loading...</h3>;\n  if (!loading && done && reviews.length === 0)\n    return <h4>We don't have any reviews for this movie</h4>;\n  return (\n    <>\n      <List>\n        {reviews.map(it => {\n          return (\n            <li key={it.id}>\n              <HeaderName>Author: {it.author}</HeaderName>\n              <p> {it.content}</p>\n            </li>\n          );\n        })}\n      </List>\n    </>\n  );\n}\nexport default Reviews;\n","import axios from 'axios';\nimport { useState, useEffect } from 'react';\n\nconst KEY = '5c631b44b992ee7cf944461a6248f299';\n\nconst response = axios.create({\n  baseURL: 'https://api.themoviedb.org/3',\n  params: {\n    api_key: KEY,\n    language: 'en-US',\n    size: 20,\n  },\n});\n\nexport const useTrendingApi = () => {\n  const [loading, setLoading] = useState(false);\n  const [data, setData] = useState([]);\n\n  useEffect(() => {\n    setLoading(true);\n    response.get('/trending/movie/day').then(res => {\n      setData(res.data.results);\n      setLoading(false);\n    });\n  }, []);\n\n  return [data, loading];\n};\n\n// https://api.themoviedb.org/3/movie/550?api_key=5c631b44b992ee7cf944461a6248f299\n\nexport function useSubPages(movieId) {\n  const [loading, setLoading] = useState(false);\n  const [movie, setMovie] = useState({});\n  const [done, setDone] = useState(false);\n\n  useEffect(() => {\n    setLoading(true);\n    response.get(`/movie/${movieId}`).then(res => {\n      setMovie(res.data);\n      setDone(true);\n      setLoading(false);\n    });\n  }, [movieId]);\n\n  return { loading, movie, done };\n}\nexport function useGetMovieCast(movieId) {\n  const [loading, setLoading] = useState(false);\n  const [cast, setCast] = useState({});\n  const [done, setDone] = useState(false);\n\n  useEffect(() => {\n    setLoading(true);\n    response.get(`/movie/${movieId}/credits`).then(res => {\n      setCast(res.data.cast);\n      setDone(true);\n      setLoading(false);\n    });\n  }, [movieId]);\n\n  return { loading, cast, done };\n}\nexport function useGetMovieReviews(movieId) {\n  const [loading, setLoading] = useState(false);\n  const [reviews, setReviews] = useState({});\n\n  const [done, setDone] = useState(false);\n\n  useEffect(() => {\n    setLoading(true);\n    response.get(`/movie/${movieId}/reviews`).then(res => {\n      setReviews(res.data.results);\n      setDone(true);\n      setLoading(false);\n    });\n  }, [movieId]);\n\n  return { loading, reviews, done };\n}\nexport const fetchSearchedMovie = async searchName => {\n  const responce = await response.get(\n    `/${`search/movie`}?api_key=${KEY}&query=${searchName}`\n  );\n  return responce.data.results;\n  // products.find((product) => product.id === productId);\n};\n"],"names":["List","styled","HeaderName","id","useParams","useGetMovieReviews","loading","reviews","done","length","map","it","author","content","KEY","response","axios","baseURL","params","api_key","language","size","useTrendingApi","useState","setLoading","data","setData","useEffect","get","then","res","results","useSubPages","movieId","movie","setMovie","setDone","useGetMovieCast","cast","setCast","setReviews","fetchSearchedMovie","searchName","responce"],"sourceRoot":""}