{"version":3,"file":"static/js/149.95829bcb.chunk.js","mappings":"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","sources":["components/MoviesList/moviesItem.styled.js","components/MoviesList/MoviesItem.jsx","components/MoviesList/moviesList.styled.js","components/MoviesList/MoviesList.jsx","components/SearchForm/SearchForm.jsx","pages/Movies.jsx","service/Movies.api.js"],"sourcesContent":["import { NavLink } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const Item = styled(NavLink)`\n  color: black;\n  text-align: center;\n  padding: 14px 16px;\n  text-decoration: none;\n\n  font-size: 34px;\n  font-weight: 400;\n\n  &:hover,\n  :focus {\n    color: red;\n  }\n`;\n","import React from 'react';\nimport { useLocation } from 'react-router-dom';\nimport { Item } from './moviesItem.styled';\n\nfunction MoviesItem({ id, title }) {\n  const location = useLocation();\n  return (\n    <li key={id}>\n      <Item to={`/movies/${id}`} state={{ from: location }}>\n        {title}\n      </Item>\n    </li>\n  );\n}\nexport default MoviesItem;\n","import styled from 'styled-components';\n\nexport const List = styled.ul`\n  display: flex;\n  background: #ffffff;\n  margin-left: auto;\n  margin-right: auto;\n  width: 1200px;\n  gap: 10px;\n  flex-direction: column;\n  align-items: center;\n  list-style: none;\n`;\n","import React from 'react';\nimport MoviesItem from './MoviesItem';\nimport { List } from './moviesList.styled';\n\nfunction MoviesList({ movies }) {\n  return (\n    <List>\n      {movies.map(movie => {\n        return <MoviesItem key={movie.id} title={movie.title} id={movie.id} />;\n      })}\n    </List>\n  );\n}\nexport default MoviesList;\n","import React from 'react';\n// import { useNavigate } from 'react-router-dom';\n\nfunction SearchForm({ setSearchParams }) {\n  // const navigate = useNavigate();\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    const form = e.currentTarget;\n    // const value = form.elements.search.value.trim().toLowerCase();\n    // if (value === '') return;\n    // if (setSearchParams.success) {\n    //   navigate('/:id', { replace: true });\n    // }\n    setSearchParams({ moviesname: form.elements.moviesname.value });\n    form.reset();\n  };\n  return (\n    <>\n      <form onSubmit={handleSubmit}>\n        <input type=\"text\" name=\"moviesname\" />\n        <button type=\"submit\">Search</button>\n      </form>\n    </>\n  );\n}\nexport default SearchForm;\n","import React from 'react';\nimport { useEffect, useState } from 'react';\nimport { fetchSearchedMovie } from 'service/Movies.api';\nimport { Outlet, useSearchParams } from 'react-router-dom';\nimport SearchForm from 'components/SearchForm/SearchForm';\nimport MoviesList from 'components/MoviesList/MoviesList';\n// import { useLocation } from 'react-router-dom';\nfunction Movies() {\n  const [movies, setMovies] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const moviesName = searchParams.get('moviesname');\n  // const location = useLocation();\n\n  useEffect(() => {\n    if (moviesName === '' || moviesName === null) {\n      return;\n    }\n    // if (location.state !== 'HomeSubPage') {\n    //   moviesName.current = movies;\n    //   return movies;\n    // }\n\n    fetchSearchedMovie(moviesName).then(setMovies);\n  }, [moviesName]);\n\n  return (\n    movies && (\n      <>\n        <SearchForm setSearchParams={setSearchParams} />\n        <MoviesList movies={movies} />\n\n        <Outlet />\n      </>\n    )\n  );\n}\nexport default Movies;\n","import axios from 'axios';\nimport { useState, useEffect } from 'react';\n\nconst KEY = '5c631b44b992ee7cf944461a6248f299';\n\nconst response = axios.create({\n  baseURL: 'https://api.themoviedb.org/3',\n  params: {\n    api_key: KEY,\n    language: 'en-US',\n    size: 20,\n  },\n});\n\nexport const useTrendingApi = () => {\n  const [loading, setLoading] = useState(false);\n  const [data, setData] = useState([]);\n\n  useEffect(() => {\n    setLoading(true);\n    response.get('/trending/movie/day').then(res => {\n      setData(res.data.results);\n      setLoading(false);\n    });\n  }, []);\n\n  return [data, loading];\n};\n\n// https://api.themoviedb.org/3/movie/550?api_key=5c631b44b992ee7cf944461a6248f299\n\nexport function useSubPages(movieId) {\n  const [loading, setLoading] = useState(false);\n  const [movie, setMovie] = useState({});\n  const [done, setDone] = useState(false);\n\n  useEffect(() => {\n    setLoading(true);\n    response.get(`/movie/${movieId}`).then(res => {\n      setMovie(res.data);\n      setDone(true);\n      setLoading(false);\n    });\n  }, [movieId]);\n\n  return { loading, movie, done };\n}\nexport function useGetMovieCast(movieId) {\n  const [loading, setLoading] = useState(false);\n  const [cast, setCast] = useState({});\n  const [done, setDone] = useState(false);\n\n  useEffect(() => {\n    setLoading(true);\n    response.get(`/movie/${movieId}/credits`).then(res => {\n      setCast(res.data.cast);\n      setDone(true);\n      setLoading(false);\n    });\n  }, [movieId]);\n\n  return { loading, cast, done };\n}\nexport function useGetMovieReviews(movieId) {\n  const [loading, setLoading] = useState(false);\n  const [reviews, setReviews] = useState({});\n\n  const [done, setDone] = useState(false);\n\n  useEffect(() => {\n    setLoading(true);\n    response.get(`/movie/${movieId}/reviews`).then(res => {\n      setReviews(res.data.results);\n      setDone(true);\n      setLoading(false);\n    });\n  }, [movieId]);\n\n  return { loading, reviews, done };\n}\nexport const fetchSearchedMovie = async searchName => {\n  const responce = await response.get(\n    `/${`search/movie`}?api_key=${KEY}&query=${searchName}`\n  );\n  return responce.data.results;\n  // products.find((product) => product.id === productId);\n};\n"],"names":["Item","styled","NavLink","id","title","location","useLocation","to","state","from","List","movies","map","movie","setSearchParams","onSubmit","e","preventDefault","form","currentTarget","moviesname","elements","value","reset","type","name","useState","setMovies","useSearchParams","searchParams","moviesName","get","useEffect","fetchSearchedMovie","then","MoviesList","KEY","response","axios","baseURL","params","api_key","language","size","useTrendingApi","loading","setLoading","data","setData","res","results","useSubPages","movieId","setMovie","done","setDone","useGetMovieCast","cast","setCast","useGetMovieReviews","reviews","setReviews","searchName","responce"],"sourceRoot":""}