{"version":3,"file":"static/js/477.86d11b55.chunk.js","mappings":"oPAEaA,EAAOC,EAAAA,GAAAA,GAAH,qHASJC,EAAaD,EAAAA,GAAAA,GAAH,0GAMVE,EAAYF,EAAAA,GAAAA,EAAH,0GAMTG,EAAOH,EAAAA,GAAAA,GAAH,wW,SCQjB,MAzBA,WACE,IAAQI,GAAOC,EAAAA,EAAAA,MAAPD,GACR,GAAgCE,EAAAA,EAAAA,IAAgBF,GAAxCG,EAAR,EAAQA,QAASC,EAAjB,EAAiBA,KAAMC,EAAvB,EAAuBA,KACvB,OAAKF,GAAYE,EACbF,GAAgB,wCAElB,+BACE,SAACR,EAAD,UACGS,EAAKE,KAAI,SAAAC,GACR,IAAMC,EAASD,EAAGE,aACX,kCADQ,OAC4BF,EAAGE,cAC1CC,EAEJ,OACE,UAACX,EAAD,YACE,UAACF,EAAD,wBAAuBU,EAAGI,cAC1B,UAACb,EAAD,mBAAiBS,EAAGK,SACpB,gBAAKC,IAAKL,EAAQM,IAAI,GAAGC,MAAO,QAHvBR,EAAGP,GAMjB,QAjBuB,IAqB/B,C,iNC3BKgB,EAAM,mCAENC,EAAWC,EAAAA,EAAAA,OAAa,CAC5BC,QAAS,+BACTC,OAAQ,CACNC,QAASL,EACTM,SAAU,QACVC,KAAM,MAIGC,EAAiB,WAC5B,OAA8BC,EAAAA,EAAAA,WAAS,GAAvC,eAAOtB,EAAP,KAAgBuB,EAAhB,KACA,GAAwBD,EAAAA,EAAAA,UAAS,IAAjC,eAAOE,EAAP,KAAaC,EAAb,KAUA,OARAC,EAAAA,EAAAA,YAAU,WACRH,GAAW,GACXT,EAASa,IAAI,uBAAuBC,MAAK,SAAAC,GACvCJ,EAAQI,EAAIL,KAAKM,SACjBP,GAAW,EACZ,GACF,GAAE,IAEI,CAACC,EAAMxB,EACf,EAIM,SAAS+B,EAAYC,GAC1B,OAA8BV,EAAAA,EAAAA,WAAS,GAAvC,eAAOtB,EAAP,KAAgBuB,EAAhB,KACA,GAA0BD,EAAAA,EAAAA,UAAS,CAAC,GAApC,eAAOW,EAAP,KAAcC,EAAd,KACA,GAAwBZ,EAAAA,EAAAA,WAAS,GAAjC,eAAOpB,EAAP,KAAaiC,EAAb,KAWA,OATAT,EAAAA,EAAAA,YAAU,WACRH,GAAW,GACXT,EAASa,IAAT,iBAAuBK,IAAWJ,MAAK,SAAAC,GACrCK,EAASL,EAAIL,MACbW,GAAQ,GACRZ,GAAW,EACZ,GACF,GAAE,CAACS,IAEG,CAAEhC,QAAAA,EAASiC,MAAAA,EAAO/B,KAAAA,EAC1B,CACM,SAASH,EAAgBiC,GAC9B,OAA8BV,EAAAA,EAAAA,WAAS,GAAvC,eAAOtB,EAAP,KAAgBuB,EAAhB,KACA,GAAwBD,EAAAA,EAAAA,UAAS,CAAC,GAAlC,eAAOrB,EAAP,KAAamC,EAAb,KACA,GAAwBd,EAAAA,EAAAA,WAAS,GAAjC,eAAOpB,EAAP,KAAaiC,EAAb,KAWA,OATAT,EAAAA,EAAAA,YAAU,WACRH,GAAW,GACXT,EAASa,IAAT,iBAAuBK,EAAvB,aAA0CJ,MAAK,SAAAC,GAC7CO,EAAQP,EAAIL,KAAKvB,MACjBkC,GAAQ,GACRZ,GAAW,EACZ,GACF,GAAE,CAACS,IAEG,CAAEhC,QAAAA,EAASC,KAAAA,EAAMC,KAAAA,EACzB,CACM,SAASmC,EAAmBL,GACjC,OAA8BV,EAAAA,EAAAA,WAAS,GAAvC,eAAOtB,EAAP,KAAgBuB,EAAhB,KACA,GAA8BD,EAAAA,EAAAA,UAAS,CAAC,GAAxC,eAAOgB,EAAP,KAAgBC,EAAhB,KAEA,GAAwBjB,EAAAA,EAAAA,WAAS,GAAjC,eAAOpB,EAAP,KAAaiC,EAAb,KAWA,OATAT,EAAAA,EAAAA,YAAU,WACRH,GAAW,GACXT,EAASa,IAAT,iBAAuBK,EAAvB,aAA0CJ,MAAK,SAAAC,GAC7CU,EAAWV,EAAIL,KAAKM,SACpBK,GAAQ,GACRZ,GAAW,EACZ,GACF,GAAE,CAACS,IAEG,CAAEhC,QAAAA,EAASsC,QAAAA,EAASpC,KAAAA,EAC5B,CACM,IAAMsC,EAAkB,mCAAG,WAAMC,GAAN,uFACT3B,EAASa,IAAT,sCACSd,EADT,kBACsB4B,IAFb,cAC1BC,EAD0B,yBAIzBA,EAASlB,KAAKM,SAJW,2CAAH,qD","sources":["pages/cast.styled.js","pages/Cast.jsx","service/Movies.api.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const List = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n\n  width: 1200px;\n  gap: 10px;\n  list-style: none;\n`;\n\nexport const HeaderName = styled.h2`\n  color: black;\n  font-size: 12px;\n  font-weight: 400;\n  margin-bottom: 10px;\n`;\nexport const AboutName = styled.p`\n  color: black;\n  font-size: 11px;\n  font-weight: 500;\n  margin-bottom: 10px;\n`;\nexport const Cart = styled.li`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  width: 200px;\n  background-color: #ffffff;\n  padding: 10px;\n  border-radius: 3px;\n  border: 2px solid #cdcece;\n  box-shadow: 0 1px 3px 0 rgba(0, 0, 0, 0.2), 0 1px 1px 0 rgba(0, 0, 0, 0.14),\n    0 2px 1px -1px rgba(0, 0, 0, 0.12);\n`;\n","import { useGetMovieCast } from 'service/Movies.api';\nimport React from 'react';\nimport { useParams } from 'react-router-dom';\nimport defaultImg from 'img/images.png';\nimport { List, HeaderName, AboutName, Cart } from './cast.styled';\n\nfunction Cast() {\n  const { id } = useParams();\n  const { loading, cast, done } = useGetMovieCast(id);\n  if (!loading && !done) return null;\n  if (loading) return <h3>Loading...</h3>;\n  return (\n    <>\n      <List>\n        {cast.map(it => {\n          const imgUrl = it.profile_path\n            ? `${'https://image.tmdb.org/t/p/w500'}${it.profile_path}`\n            : defaultImg;\n\n          return (\n            <Cart key={it.id}>\n              <HeaderName>Character:{it.character}</HeaderName>\n              <AboutName>Name:{it.name}</AboutName>\n              <img src={imgUrl} alt=\"\" width={150} />\n            </Cart>\n          );\n        })}\n      </List>\n    </>\n  );\n}\nexport default Cast;\n","import axios from 'axios';\nimport { useState, useEffect } from 'react';\n\nconst KEY = '5c631b44b992ee7cf944461a6248f299';\n\nconst response = axios.create({\n  baseURL: 'https://api.themoviedb.org/3',\n  params: {\n    api_key: KEY,\n    language: 'en-US',\n    size: 20,\n  },\n});\n\nexport const useTrendingApi = () => {\n  const [loading, setLoading] = useState(false);\n  const [data, setData] = useState([]);\n\n  useEffect(() => {\n    setLoading(true);\n    response.get('/trending/movie/day').then(res => {\n      setData(res.data.results);\n      setLoading(false);\n    });\n  }, []);\n\n  return [data, loading];\n};\n\n// https://api.themoviedb.org/3/movie/550?api_key=5c631b44b992ee7cf944461a6248f299\n\nexport function useSubPages(movieId) {\n  const [loading, setLoading] = useState(false);\n  const [movie, setMovie] = useState({});\n  const [done, setDone] = useState(false);\n\n  useEffect(() => {\n    setLoading(true);\n    response.get(`/movie/${movieId}`).then(res => {\n      setMovie(res.data);\n      setDone(true);\n      setLoading(false);\n    });\n  }, [movieId]);\n\n  return { loading, movie, done };\n}\nexport function useGetMovieCast(movieId) {\n  const [loading, setLoading] = useState(false);\n  const [cast, setCast] = useState({});\n  const [done, setDone] = useState(false);\n\n  useEffect(() => {\n    setLoading(true);\n    response.get(`/movie/${movieId}/credits`).then(res => {\n      setCast(res.data.cast);\n      setDone(true);\n      setLoading(false);\n    });\n  }, [movieId]);\n\n  return { loading, cast, done };\n}\nexport function useGetMovieReviews(movieId) {\n  const [loading, setLoading] = useState(false);\n  const [reviews, setReviews] = useState({});\n\n  const [done, setDone] = useState(false);\n\n  useEffect(() => {\n    setLoading(true);\n    response.get(`/movie/${movieId}/reviews`).then(res => {\n      setReviews(res.data.results);\n      setDone(true);\n      setLoading(false);\n    });\n  }, [movieId]);\n\n  return { loading, reviews, done };\n}\nexport const fetchSearchedMovie = async searchName => {\n  const responce = await response.get(\n    `/${`search/movie`}?api_key=${KEY}&query=${searchName}`\n  );\n  return responce.data.results;\n  // products.find((product) => product.id === productId);\n};\n"],"names":["List","styled","HeaderName","AboutName","Cart","id","useParams","useGetMovieCast","loading","cast","done","map","it","imgUrl","profile_path","defaultImg","character","name","src","alt","width","KEY","response","axios","baseURL","params","api_key","language","size","useTrendingApi","useState","setLoading","data","setData","useEffect","get","then","res","results","useSubPages","movieId","movie","setMovie","setDone","setCast","useGetMovieReviews","reviews","setReviews","fetchSearchedMovie","searchName","responce"],"sourceRoot":""}